'''Read volumetric mesh file (vtu) generated by SimVascular
   and add fiber direction at the centroid using keyword
   FIB_DIR '''
import numpy as np
import vtk
from vtk.util import numpy_support as vtknp

def find_t(x,y,z,rsi,rso,rli,rlo,v):
    ''' Use Newton method to find t'''
    t = 0.5
    y = x/np.cos(v)
    dt = 1.0
    drl = rlo-rli
    drs = rso-rsi

    while np.abs(dt)>1e-6:
        rl = rli + drl*t
        rs = rsi + drs*t

        f = (rl*rs)**2 - (y*rl)**2 - (z*rs)**2
        df = 2*rl*rs*(rs*drl+rl*drs) - 2*y**2*rl*drl - 2*z**2*rs*drs
        dt = -f/df
        t = t + dt

    return t

fname = "mesh-complete.mesh.vtu"

reader = vtk.vtkXMLUnstructuredGridReader()
reader.SetFileName(fname)
reader.Update()
output = reader.GetOutput()

# number of points
NoP = output.GetNumberOfPoints()
# number of cells
NoC = output.GetNumberOfCells()
# coordinates of points
temp_vtk_array = output.GetPoints().GetData()
temp = vtknp.vtk_to_numpy(temp_vtk_array)
conn = [ ]
# cell connectivity
for i in range(NoC):
    cell = output.GetCell(i)
    npts = cell.GetNumberOfPoints()
    connt = [cell.GetPointId(j) for j in range(npts)]
    conn.append(connt)
conn = np.asarray(conn)

eNoN = len(conn[-1,:])
coord = np.zeros((NoC,3))
for i in range(NoC):
    for j in range(eNoN):
        k = conn[i,j]
        coord[i,:] = coord[i,:] + temp[k,:]
coord = coord/eNoN

# parameters
rsi = 7.0
rli = 17.0
rso = 10.0
rlo = 20.0

# calculate the polar coordinate of each point
t = np.array([])
u = np.array([])
v = np.array([])
for i in range(NoC):
    x,y,z = coord[i,0], coord[i,1], coord[i,2]
    vt = np.arctan(y/x)
    if x<0 and y>0:
        vt = np.pi +vt
    elif x<0 and y<0:
        vt = vt - np.pi
    tt = find_t(x,y,z,rsi,rso,rli,rlo,vt)
    ut = np.arccos(z/(rli+(rlo-rli)*tt))

    t = np.append(t,tt)
    u = np.append(u,ut)
    v = np.append(v,vt)

# sanity check
error = np.array([])
x = np.zeros((NoC,3))
for i in range(NoC):
    x[i,0] = (rsi+(rso-rsi)*t[i])*np.sin(u[i])*np.cos(v[i])
    x[i,1] = (rsi+(rso-rsi)*t[i])*np.sin(u[i])*np.sin(v[i])
    x[i,2] = (rli+(rlo-rli)*t[i])*np.cos(u[i])
    error = np.append(error,np.linalg.norm(x[i,:]-coord[i,:]))
print("Maximum error is "+str(np.max(error)))

# fiber directions
dxdu = np.zeros((NoC,3))
dxdv = np.zeros((NoC,3))
temp = np.zeros(3)
for i in range(NoC):
    rs = rsi+(rso-rsi)*t[i]
    rl = rli+(rlo-rli)*t[i]
    temp[0] = rs*np.cos(u[i])*np.cos(v[i])
    temp[1] = rs*np.cos(u[i])*np.sin(v[i])
    temp[2] = -rl*np.sin(u[i])
    dxdu[i,:] = temp/np.linalg.norm(temp)

    temp[0] = -rs*np.sin(u[i])*np.sin(v[i])
    temp[1] =  rs*np.sin(u[i])*np.cos(v[i])
    temp[2] =  0.0
    dxdv[i,:] = temp/np.linalg.norm(temp)

f = np.zeros((NoC,3))
n = np.zeros((NoC,3))
s = np.zeros((NoC,3))
for i in range(NoC):
    alpha =  -np.pi/2.0*(1.0-2.0*t[i])
    f[i,:] = dxdu[i,:]*np.sin(alpha) + dxdv[i,:]*np.cos(alpha)

    beta   = alpha - np.pi/2.0
    n[i,:] = dxdu[i,:]*np.sin(beta) + dxdv[i,:]*np.cos(beta)

    s[i,:] = np.cross(f[i,:],n[i,:])

#########################################################
## write vtu files

#output.GetCellData().RemoveArray("GlobalElementID")
#output.GetCellData().RemoveArray("ModelRegionID")
#output.GetPointData().RemoveArray("GlobalNodeID")

fname1 = "fibersLong.vtu"
bff = vtk.vtkDoubleArray()
bff.SetNumberOfComponents(3)
bff.Allocate(NoC)
bff.SetNumberOfTuples(NoC)

bff.SetName("FIB_DIR")

for i in range(NoC):
    bff.SetTuple3(i, f[i,0], f[i,1], f[i,2])

output.GetCellData().AddArray(bff)
mshwrite = vtk.vtkXMLUnstructuredGridWriter()
mshwrite.SetInputData(output)
mshwrite.SetFileName(fname1)
mshwrite.Write()

output.GetCellData().RemoveArray("FIB_DIR")
fname1 = "fibersSheet.vtu"
bff = vtk.vtkDoubleArray()
bff.SetNumberOfComponents(3)
bff.Allocate(NoC)
bff.SetNumberOfTuples(NoC)

bff.SetName("FIB_DIR")

for i in range(NoC):
    bff.SetTuple3(i, s[i,0], s[i,1], s[i,2])

output.GetCellData().AddArray(bff)
mshwrite = vtk.vtkXMLUnstructuredGridWriter()
mshwrite.SetInputData(output)
mshwrite.SetFileName(fname1)
mshwrite.Write()

output.GetCellData().RemoveArray("FIB_DIR")
fname1 = "phi.vtu"
phi = vtknp.numpy_to_vtk(t,array_type=vtk.VTK_DOUBLE)
phi.SetName("Phi")
output.GetCellData().AddArray(phi)

mshwrite = vtk.vtkXMLUnstructuredGridWriter()
mshwrite.SetInputData(output)
mshwrite.SetFileName(fname1)
mshwrite.Write()

