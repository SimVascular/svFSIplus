name: test Ubuntu
on: [push, pull_request]
jobs:
    test:
      strategy:
        matrix:
          name: [Ubuntu-20.04, Ubuntu-22.04]
          include:
            - name: Ubuntu-20.04
              version: ubuntu-20.04
              image: ubuntu20
            - name: Ubuntu-22.04
              version: ubuntu-22.04
              image: ubuntu22
      runs-on: ${{ matrix.version }}
      container: dcodoni/lib:${{ matrix.image }}
      steps:
        - uses: actions/checkout@v3
        - name: Build svFSIplus
          run: |
            if [ -d "build" ]; then
            rm -rf "build"
            fi
            mkdir build
            cd build
            cmake -DENABLE_COVERAGE=ON -DENABLE_ARRAY_INDEX_CHECKING=ON -DENABLE_UNIT_TEST=ON -DSV_USE_TRILINOS:BOOL=ON ..
            make -j2
            cd ..
        - name: Build svFSIplus (PETSc)
          run: |
            if [ -d "build-petsc" ]; then
            rm -rf "build-petsc"
            fi
            mkdir build-petsc
            cd build-petsc
            cmake -DENABLE_COVERAGE=ON -DENABLE_ARRAY_INDEX_CHECKING=ON -DENABLE_UNIT_TEST=ON -DSV_PETSC_DIR:STRING=/petsc ..
            make -j2
            cd ..
        - name: Run integration tests
          run: |
            git config --global --add safe.directory /__w/svFSIplus/svFSIplus
            git lfs pull
            cd tests
            conda run -n svfsiplus pytest -rPv --durations=0
        - name: Run unit tests
          run: |  
            cd build/svFSI-build/Source/svFSI
            ctest --verbose
        - name: Generate code coverage
          run: |
            cd build/svFSI-build
            make coverage
        - name: Save coverage report
          uses: actions/upload-artifact@v3
          with:
            name: coverage_report
            path: build/svFSI-build/coverage
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v3
          env:
            CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  
  
